apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: NomadMachineTemplate
metadata:
  name: worker2
  namespace: default
spec:
  template:
    spec:
      cpu: 2
      memoryMB: 4096
      image: u-1804-0-k-11910-0
      # debugVNC: :2
---
# apiVersion: cluster.x-k8s.io/v1alpha3
# kind: MachineDeployment
# metadata:
#   name: cluster2-default-worker
#   namespace: default
# spec:
#   clusterName: my-cluster2
#   replicas: 1
#   selector:
#     matchLabels:
#       cluster.x-k8s.io/cluster-name: my-cluster2
#   template:
#     spec:
#       clusterName: my-cluster2
#       version: 1.19.10
#       failureDomain: default
#       bootstrap:
#         configRef:
#           apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
#           kind: KubeadmConfigTemplate
#           name: worker2
#       infrastructureRef:
#         apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
#         kind: NomadMachineTemplate
#         name: worker2
---
apiVersion: cluster.x-k8s.io/v1alpha3
kind: MachineDeployment
metadata:
  name: cluster2-dc1-worker
  namespace: default
spec:
  clusterName: my-cluster2
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/cluster-name: my-cluster2
  template:
    spec:
      clusterName: my-cluster2
      version: 1.19.10
      failureDomain: dc1
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
          kind: KubeadmConfigTemplate
          name: worker2
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
        kind: NomadMachineTemplate
        name: worker2
---
# apiVersion: cluster.x-k8s.io/v1alpha3
# kind: MachineDeployment
# metadata:
#   name: cluster2-az2-worker
#   namespace: default
# spec:
#   clusterName: my-cluster2
#   replicas: 1
#   selector:
#     matchLabels:
#       cluster.x-k8s.io/cluster-name: my-cluster2
#   template:
#     spec:
#       clusterName: my-cluster2
#       version: 1.19.10
#       failureDomain: az1
#       bootstrap:
#         configRef:
#           apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
#           kind: KubeadmConfigTemplate
#           name: worker2
#       infrastructureRef:
#         apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
#         kind: NomadMachineTemplate
#         name: worker2
# ---
# apiVersion: cluster.x-k8s.io/v1alpha3
# kind: MachineDeployment
# metadata:
#   name: cluster2-az3-worker
#   namespace: default
# spec:
#   clusterName: my-cluster2
#   replicas: 1
#   selector:
#     matchLabels:
#       cluster.x-k8s.io/cluster-name: my-cluster2
#   template:
#     spec:
#       clusterName: my-cluster2
#       version: 1.19.10
#       failureDomain: az3
#       bootstrap:
#         configRef:
#           apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
#           kind: KubeadmConfigTemplate
#           name: worker2
#       infrastructureRef:
#         apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
#         kind: NomadMachineTemplate
#         name: worker2
# ---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
kind: KubeadmConfigTemplate
metadata:
  name: worker2
  namespace: default
spec:
  template:
    spec:
      files:
      - content: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGVENDQWYyZ0F3SUJBZ0lVRzc2Sm1yWlJ6ZlJsYnN0UlVIcnFwaXhUVFJzd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0VqRVFNQTRHQTFVRUF3d0hjbTl2ZEY5allUQWVGdzB5TVRBek1EWXlNakl3TURSYUZ3MHpNREEwTWpJdwpOakl3TXpSYU1CSXhFREFPQmdOVkJBTU1CM0p2YjNSZlkyRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHZ2SEtXRCtQZ2VMam50UVBYSmFhR2U4TVZnVHd0TWxOKzkxeHZzMWtBb2ZxbUtxSXcKcXJGQTJobEU1TXNNUW9Cb0wxQm96ajRpV09JVHhDeDFRYnlqMmRzcHlSSlRvdDFKSS9MVlZrWWRaekpCeThHNApnSGRvNUdCOGRMWitUbXRFQTRHWmRWVTM0T0R2NGpCdUtFZmZsVlJyVVY5OHJwWHRTZEYwZ1h4S1EwVlFjajlWCnhMYVV4Zm1nY2FEYnBzQ0pjSi9YVUVCSzV6YlVqWDhFMnhielkyRzAwdW1RSWJCVGlXL1FldzNsMnBRQ1VOOWoKSGxsMnhCNlN6d0Z4TU5BMDI4YUYzV2RzODE4RUVWa0tFdis3ekFBL3hVQ3VKcHgvMDR5ZXZZN054Qk9UT1B3TgpwdExoLzN1Sjc1R2x6TnprQ2xqdzdFcTZxSFpSMWVnV1IyL0RBZ01CQUFHall6QmhNQTRHQTFVZER3RUIvd1FFCkF3SUJCakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlJFTXFLZEpNQTZKMXg5MlZ5WHlpZy8KL0NHSG1EQWZCZ05WSFNNRUdEQVdnQlJFTXFLZEpNQTZKMXg5MlZ5WHlpZy8vQ0dIbURBTkJna3Foa2lHOXcwQgpBUXNGQUFPQ0FRRUFYZ0dqdmtuRzVFL0IrWXcvQUR6bzVJTWZHZnVPdlhZTHZvWGZ2SWs2Uit1WTM3eUNhTVR5CnN3bmd2djMzQmExUVFkTVpNTDJjT1F3NElGK3hKWWNHNU53WmdybXY3Qlg1VFUxTlh5L0U4QXRjNDRUd1oyV0UKZGxibW4wcVcwUms1RXRVZlU5ZjA4ZURwSG9sTFhWaGtyVnJYc21uLzEvSjhFOEM4WVdNWGtNZ2ZCaDVxdGNuTgowZmpyTElrRjBRRlVlS2xQT0dFNnQxeUE2RkIwTmdidUgyNW90K0lndVpzTCs0S1F5UnM2ZlBjamtIcGZ5NDFxCjUzQVloWHpmZE5GU1F1K0RFS1FFdURoYTJ0L1A2Ty8zZmFvbndSYnNUamtEdDY0Ync4ZjFpM2JYR0VNVjZjWHMKZStyNzFOT3p4ZWJXU2NMMlNTWmZWcXBUZ3Nja2dTQTVEUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
        encoding: base64
        owner: root:root
        path: /usr/local/share/ca-certificates/root_ca.crt
        permissions: "0644"
      - content: YXBpVmVyc2lvbjogYXVkaXQuazhzLmlvL3YxCmtpbmQ6IFBvbGljeQpydWxlczoKICAtIGxldmVsOiBOb25lCiAgICB1c2VyczogWyJzeXN0ZW06a3ViZS1wcm94eSJdCiAgICB2ZXJiczogWyJ3YXRjaCJdCiAgICByZXNvdXJjZXM6CiAgICAgIC0gZ3JvdXA6ICIiICMgY29yZQogICAgICAgIHJlc291cmNlczogWyJlbmRwb2ludHMiLCAic2VydmljZXMiLCAic2VydmljZXMvc3RhdHVzIl0KICAtIGxldmVsOiBOb25lCiAgICB1c2VyczogWyJzeXN0ZW06dW5zZWN1cmVkIl0KICAgIG5hbWVzcGFjZXM6IFsia3ViZS1zeXN0ZW0iXQogICAgdmVyYnM6IFsiZ2V0Il0KICAgIHJlc291cmNlczoKICAgICAgLSBncm91cDogIiIgIyBjb3JlCiAgICAgICAgcmVzb3VyY2VzOiBbImNvbmZpZ21hcHMiXQogIC0gbGV2ZWw6IE5vbmUKICAgIHVzZXJzOiBbImt1YmVsZXQiXSAjIGxlZ2FjeSBrdWJlbGV0IGlkZW50aXR5CiAgICB2ZXJiczogWyJnZXQiXQogICAgcmVzb3VyY2VzOgogICAgICAtIGdyb3VwOiAiIiAjIGNvcmUKICAgICAgICByZXNvdXJjZXM6IFsibm9kZXMiLCAibm9kZXMvc3RhdHVzIl0KICAtIGxldmVsOiBOb25lCiAgICB1c2VyR3JvdXBzOiBbInN5c3RlbTpub2RlcyJdCiAgICB2ZXJiczogWyJnZXQiXQogICAgcmVzb3VyY2VzOgogICAgICAtIGdyb3VwOiAiIiAjIGNvcmUKICAgICAgICByZXNvdXJjZXM6IFsibm9kZXMiLCAibm9kZXMvc3RhdHVzIl0KICAtIGxldmVsOiBOb25lCiAgICB1c2VyczoKICAgICAgLSBzeXN0ZW06a3ViZS1jb250cm9sbGVyLW1hbmFnZXIKICAgICAgLSBzeXN0ZW06a3ViZS1zY2hlZHVsZXIKICAgICAgLSBzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06ZW5kcG9pbnQtY29udHJvbGxlcgogICAgdmVyYnM6IFsiZ2V0IiwgInVwZGF0ZSJdCiAgICBuYW1lc3BhY2VzOiBbImt1YmUtc3lzdGVtIl0KICAgIHJlc291cmNlczoKICAgICAgLSBncm91cDogIiIgIyBjb3JlCiAgICAgICAgcmVzb3VyY2VzOiBbImVuZHBvaW50cyJdCiAgLSBsZXZlbDogTm9uZQogICAgdXNlcnM6IFsic3lzdGVtOmFwaXNlcnZlciJdCiAgICB2ZXJiczogWyJnZXQiXQogICAgcmVzb3VyY2VzOgogICAgICAtIGdyb3VwOiAiIiAjIGNvcmUKICAgICAgICByZXNvdXJjZXM6IFsibmFtZXNwYWNlcyIsICJuYW1lc3BhY2VzL3N0YXR1cyIsICJuYW1lc3BhY2VzL2ZpbmFsaXplIl0KICAtIGxldmVsOiBOb25lCiAgICB1c2VyczogWyJjbHVzdGVyLWF1dG9zY2FsZXIiXQogICAgdmVyYnM6IFsiZ2V0IiwgInVwZGF0ZSJdCiAgICBuYW1lc3BhY2VzOiBbImt1YmUtc3lzdGVtIl0KICAgIHJlc291cmNlczoKICAgICAgLSBncm91cDogIiIgIyBjb3JlCiAgICAgICAgcmVzb3VyY2VzOiBbImNvbmZpZ21hcHMiLCAiZW5kcG9pbnRzIl0KICAjIERvbid0IGxvZyBIUEEgZmV0Y2hpbmcgbWV0cmljcy4KICAtIGxldmVsOiBOb25lCiAgICB1c2VyczoKICAgICAgLSBzeXN0ZW06a3ViZS1jb250cm9sbGVyLW1hbmFnZXIKICAgIHZlcmJzOiBbImdldCIsICJsaXN0Il0KICAgIHJlc291cmNlczoKICAgICAgLSBncm91cDogIm1ldHJpY3MuazhzLmlvIgogICMgRG9uJ3QgbG9nIHRoZXNlIHJlYWQtb25seSBVUkxzLgogIC0gbGV2ZWw6IE5vbmUKICAgIG5vblJlc291cmNlVVJMczoKICAgICAgLSAvaGVhbHRoeioKICAgICAgLSAvdmVyc2lvbgogICAgICAtIC9zd2FnZ2VyKgogICMgRG9uJ3QgbG9nIGV2ZW50cyByZXF1ZXN0cy4KICAtIGxldmVsOiBOb25lCiAgICByZXNvdXJjZXM6CiAgICAgIC0gZ3JvdXA6ICIiICMgY29yZQogICAgICAgIHJlc291cmNlczogWyJldmVudHMiXQogICMgbm9kZSBhbmQgcG9kIHN0YXR1cyBjYWxscyBmcm9tIG5vZGVzIGFyZSBoaWdoLXZvbHVtZSBhbmQgY2FuIGJlIGxhcmdlLCBkb24ndCBsb2cgcmVzcG9uc2VzIGZvciBleHBlY3RlZCB1cGRhdGVzIGZyb20gbm9kZXMKICAtIGxldmVsOiBSZXF1ZXN0CiAgICB1c2VyczogWyJrdWJlbGV0IiwgInN5c3RlbTpub2RlLXByb2JsZW0tZGV0ZWN0b3IiLCAic3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmUtc3lzdGVtOm5vZGUtcHJvYmxlbS1kZXRlY3RvciJdCiAgICB2ZXJiczogWyJ1cGRhdGUiLCJwYXRjaCJdCiAgICByZXNvdXJjZXM6CiAgICAgIC0gZ3JvdXA6ICIiICMgY29yZQogICAgICAgIHJlc291cmNlczogWyJub2Rlcy9zdGF0dXMiLCAicG9kcy9zdGF0dXMiXQogICAgb21pdFN0YWdlczoKICAgICAgLSAiUmVxdWVzdFJlY2VpdmVkIgogIC0gbGV2ZWw6IFJlcXVlc3QKICAgIHVzZXJHcm91cHM6IFsic3lzdGVtOm5vZGVzIl0KICAgIHZlcmJzOiBbInVwZGF0ZSIsInBhdGNoIl0KICAgIHJlc291cmNlczoKICAgICAgLSBncm91cDogIiIgIyBjb3JlCiAgICAgICAgcmVzb3VyY2VzOiBbIm5vZGVzL3N0YXR1cyIsICJwb2RzL3N0YXR1cyJdCiAgICBvbWl0U3RhZ2VzOgogICAgICAtICJSZXF1ZXN0UmVjZWl2ZWQiCiAgIyBkZWxldGVjb2xsZWN0aW9uIGNhbGxzIGNhbiBiZSBsYXJnZSwgZG9uJ3QgbG9nIHJlc3BvbnNlcyBmb3IgZXhwZWN0ZWQgbmFtZXNwYWNlIGRlbGV0aW9ucwogIC0gbGV2ZWw6IFJlcXVlc3QKICAgIHVzZXJzOiBbInN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTpuYW1lc3BhY2UtY29udHJvbGxlciJdCiAgICB2ZXJiczogWyJkZWxldGVjb2xsZWN0aW9uIl0KICAgIG9taXRTdGFnZXM6CiAgICAgIC0gIlJlcXVlc3RSZWNlaXZlZCIKICAjIFNlY3JldHMsIENvbmZpZ01hcHMsIGFuZCBUb2tlblJldmlld3MgY2FuIGNvbnRhaW4gc2Vuc2l0aXZlICYgYmluYXJ5IGRhdGEsCiAgIyBzbyBvbmx5IGxvZyBhdCB0aGUgTWV0YWRhdGEgbGV2ZWwuCiAgLSBsZXZlbDogTWV0YWRhdGEKICAgIHJlc291cmNlczoKICAgICAgLSBncm91cDogIiIgIyBjb3JlCiAgICAgICAgcmVzb3VyY2VzOiBbInNlY3JldHMiLCAiY29uZmlnbWFwcyJdCiAgICAgIC0gZ3JvdXA6IGF1dGhlbnRpY2F0aW9uLms4cy5pbwogICAgICAgIHJlc291cmNlczogWyJ0b2tlbnJldmlld3MiXQogICAgb21pdFN0YWdlczoKICAgICAgLSAiUmVxdWVzdFJlY2VpdmVkIgogICMgR2V0IHJlcHNvbnNlcyBjYW4gYmUgbGFyZ2U7IHNraXAgdGhlbS4KICAtIGxldmVsOiBSZXF1ZXN0CiAgICB2ZXJiczogWyJnZXQiLCAibGlzdCIsICJ3YXRjaCJdCiAgICByZXNvdXJjZXM6CiAgICAtIGdyb3VwOiAiIiAjIGNvcmUKICAgIC0gZ3JvdXA6ICJhZG1pc3Npb25yZWdpc3RyYXRpb24uazhzLmlvIgogICAgLSBncm91cDogImFwaWV4dGVuc2lvbnMuazhzLmlvIgogICAgLSBncm91cDogImFwaXJlZ2lzdHJhdGlvbi5rOHMuaW8iCiAgICAtIGdyb3VwOiAiYXBwcyIKICAgIC0gZ3JvdXA6ICJhdXRoZW50aWNhdGlvbi5rOHMuaW8iCiAgICAtIGdyb3VwOiAiYXV0aG9yaXphdGlvbi5rOHMuaW8iCiAgICAtIGdyb3VwOiAiYXV0b3NjYWxpbmciCiAgICAtIGdyb3VwOiAiYmF0Y2giCiAgICAtIGdyb3VwOiAiY2VydGlmaWNhdGVzLms4cy5pbyIKICAgIC0gZ3JvdXA6ICJleHRlbnNpb25zIgogICAgLSBncm91cDogIm1ldHJpY3MuazhzLmlvIgogICAgLSBncm91cDogIm5ldHdvcmtpbmcuazhzLmlvIgogICAgLSBncm91cDogInBvbGljeSIKICAgIC0gZ3JvdXA6ICJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIgogICAgLSBncm91cDogInNldHRpbmdzLms4cy5pbyIKICAgIC0gZ3JvdXA6ICJzdG9yYWdlLms4cy5pbyIKICAgIG9taXRTdGFnZXM6CiAgICAgIC0gIlJlcXVlc3RSZWNlaXZlZCIKICAjIERlZmF1bHQgbGV2ZWwgZm9yIGtub3duIEFQSXMKICAtIGxldmVsOiBSZXF1ZXN0UmVzcG9uc2UKICAgIHJlc291cmNlczoKICAgIC0gZ3JvdXA6ICIiICMgY29yZQogICAgLSBncm91cDogImFkbWlzc2lvbnJlZ2lzdHJhdGlvbi5rOHMuaW8iCiAgICAtIGdyb3VwOiAiYXBpZXh0ZW5zaW9ucy5rOHMuaW8iCiAgICAtIGdyb3VwOiAiYXBpcmVnaXN0cmF0aW9uLms4cy5pbyIKICAgIC0gZ3JvdXA6ICJhcHBzIgogICAgLSBncm91cDogImF1dGhlbnRpY2F0aW9uLms4cy5pbyIKICAgIC0gZ3JvdXA6ICJhdXRob3JpemF0aW9uLms4cy5pbyIKICAgIC0gZ3JvdXA6ICJhdXRvc2NhbGluZyIKICAgIC0gZ3JvdXA6ICJiYXRjaCIKICAgIC0gZ3JvdXA6ICJjZXJ0aWZpY2F0ZXMuazhzLmlvIgogICAgLSBncm91cDogImV4dGVuc2lvbnMiCiAgICAtIGdyb3VwOiAibWV0cmljcy5rOHMuaW8iCiAgICAtIGdyb3VwOiAibmV0d29ya2luZy5rOHMuaW8iCiAgICAtIGdyb3VwOiAicG9saWN5IgogICAgLSBncm91cDogInJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iCiAgICAtIGdyb3VwOiAic2V0dGluZ3MuazhzLmlvIgogICAgLSBncm91cDogInN0b3JhZ2UuazhzLmlvIgogICAgb21pdFN0YWdlczoKICAgICAgLSAiUmVxdWVzdFJlY2VpdmVkIgogICMgRGVmYXVsdCBsZXZlbCBmb3IgYWxsIG90aGVyIHJlcXVlc3RzLgogIC0gbGV2ZWw6IE1ldGFkYXRhCiAgICBvbWl0U3RhZ2VzOgogICAgICAtICJSZXF1ZXN0UmVjZWl2ZWQiCg==
        encoding: base64
        owner: root:root
        path: /etc/kubernetes/audit-policy.yaml
        permissions: "0600"
      - content: YXBpVmVyc2lvbjogcG9saWN5L3YxYmV0YTEKa2luZDogUG9kU2VjdXJpdHlQb2xpY3kKbWV0YWRhdGE6CiAgYW5ub3RhdGlvbnM6CiAgICAjIFNlZSBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9wb2xpY3kvcG9kLXNlY3VyaXR5LXBvbGljeS8jc2VjY29tcAogICAgc2VjY29tcC5zZWN1cml0eS5hbHBoYS5rdWJlcm5ldGVzLmlvL2FsbG93ZWRQcm9maWxlTmFtZXM6ICcqJwogIG5hbWU6IHByaXZpbGVnZWQKc3BlYzoKICBwcml2aWxlZ2VkOiB0cnVlCiAgYWxsb3dQcml2aWxlZ2VFc2NhbGF0aW9uOiB0cnVlCiAgYWxsb3dlZENhcGFiaWxpdGllczoKICAgIC0gJyonCiAgdm9sdW1lczoKICAgIC0gJyonCiAgaG9zdE5ldHdvcms6IHRydWUKICBob3N0UG9ydHM6CiAgICAtIG1pbjogMAogICAgICBtYXg6IDY1NTM1CiAgaG9zdElQQzogdHJ1ZQogIGhvc3RQSUQ6IHRydWUKICBydW5Bc1VzZXI6CiAgICBydWxlOiAnUnVuQXNBbnknCiAgc2VMaW51eDoKICAgIHJ1bGU6ICdSdW5Bc0FueScKICBzdXBwbGVtZW50YWxHcm91cHM6CiAgICBydWxlOiAnUnVuQXNBbnknCiAgZnNHcm91cDoKICAgIHJ1bGU6ICdSdW5Bc0FueScKICByZWFkT25seVJvb3RGaWxlc3lzdGVtOiBmYWxzZQoKLS0tCgojIENsdXN0ZXIgcm9sZSB3aGljaCBncmFudHMgYWNjZXNzIHRvIHRoZSBwcml2aWxlZ2VkIHBvZCBzZWN1cml0eSBwb2xpY3kKYXBpVmVyc2lvbjogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MQpraW5kOiBDbHVzdGVyUm9sZQptZXRhZGF0YToKICBuYW1lOiBwcml2aWxlZ2VkCnJ1bGVzOgogIC0gYXBpR3JvdXBzOgogICAgICAtIHBvbGljeQogICAgcmVzb3VyY2VOYW1lczoKICAgICAgLSBwcml2aWxlZ2VkCiAgICByZXNvdXJjZXM6CiAgICAgIC0gcG9kc2VjdXJpdHlwb2xpY2llcwogICAgdmVyYnM6CiAgICAgIC0gdXNlCgotLS0KCmFwaVZlcnNpb246IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8vdjEKa2luZDogUm9sZUJpbmRpbmcKbWV0YWRhdGE6CiAgbmFtZTogcHJpdmlsZWdlZAogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Kcm9sZVJlZjoKICBhcGlHcm91cDogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pbwogIGtpbmQ6IENsdXN0ZXJSb2xlCiAgbmFtZTogcHJpdmlsZWdlZApzdWJqZWN0czoKICAjIEZvciB0aGUga3ViZWFkbSBrdWJlLXN5c3RlbSBub2RlcwogIC0gYXBpR3JvdXA6IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8KICAgIGtpbmQ6IEdyb3VwCiAgICBuYW1lOiBzeXN0ZW06bm9kZXMKICAjIEZvciBhbGwgc2VydmljZSBhY2NvdW50cyBpbiB0aGUga3ViZS1zeXN0ZW0gbmFtZXNwYWNlCiAgLSBhcGlHcm91cDogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pbwogICAga2luZDogR3JvdXAKICAgIG5hbWU6IHN5c3RlbTpzZXJ2aWNlYWNjb3VudHM6a3ViZS1zeXN0ZW0KCi0tLQoKIyBDbHVzdGVyIHJvbGUgYmluZGluZyBmb3IgZGVmYXVsdCBwb2Qgc2VjdXJpdHkgcG9saWN5IGdyYW50aW5nIGFsbCBhdXRoZW50aWNhdGVkIHVzZXJzIGFjY2VzcwphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCmtpbmQ6IENsdXN0ZXJSb2xlQmluZGluZwptZXRhZGF0YToKICBuYW1lOiByZXN0cmljdGVkCnJvbGVSZWY6CiAgYXBpR3JvdXA6IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8KICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IHByaXZpbGVnZWQKc3ViamVjdHM6CiAgLSBhcGlHcm91cDogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pbwogICAga2luZDogR3JvdXAKICAgIG5hbWU6IHN5c3RlbTphdXRoZW50aWNhdGVk
        encoding: base64
        owner: root:root
        path: /etc/kubernetes/hardening/privileged-psp.yaml
        permissions: "0600"
      - content: dm0ub3ZlcmNvbW1pdF9tZW1vcnk9MQprZXJuZWwucGFuaWM9MTAKa2VybmVsLnBhbmljX29uX29vcHM9MQ==
        encoding: base64
        owner: root:root
        path: /etc/sysctl.d/90-kubelet.conf
        permissions: "0600"
      joinConfiguration:
        discovery: {}
        nodeRegistration:
          kubeletExtraArgs:
            #cloud-provider: aws
            event-qps: "0"
            feature-gates: RotateKubeletServerCertificate=true
            protect-kernel-defaults: "true"
            read-only-port: "0"
            tls-cipher-suites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256
          name: '{{ v1.local_hostname }}'
      postKubeadmCommands:
      - export KUBECONFIG=/etc/kubernetes/admin.conf
      - '[ -f "$KUBECONFIG" ] && { echo " ====> Applying PodSecurityPolicy" ; until
        $(kubectl apply -f /etc/kubernetes/hardening/privileged-psp.yaml > /dev/null
        ); do echo "Failed to apply PodSecurityPolicies, will retry in 5s" ; sleep
        5 ; done ; } || echo "Skipping PodSecurityPolicy for worker nodes"'
      preKubeadmCommands:
      - mkdir -p /etc/systemd/system/containerd.service.d
      - printf "[Service]\nEnvironment=\"HTTP_PROXY=http://10.10.132.89:3128\"\nEnvironment=\"HTTPS_PROXY=http://10.10.132.89:3128\"\nEnvironment=\"NO_PROXY=127.0.0.1,localhost,10.96.0.0/12,vcenter2.spectrocloud.local,10.10.0.0/16\""  >>
        /etc/systemd/system/containerd.service.d/http-proxy.conf
      - systemctl daemon-reload
      - systemctl restart containerd
      - while [ ! -S /var/run/containerd/containerd.sock ]; do echo 'Waiting for containerd...';
        sleep 1; done
      - echo "Executing pre kube admin config commands"
      - update-ca-certificates
      - systemctl restart containerd; sleep 3
      - while [ ! -S /var/run/containerd/containerd.sock ]; do echo "Waiting for containerd...";
        sleep 1; done
      - echo "====> Applying kernel parameters for Kubelet"
      - sysctl -p /etc/sysctl.d/90-kubelet.conf
      useExperimentalRetryJoin: true
